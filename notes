Changes:
- ligating_loop_env.py line 308
    self is wrong: elif self.observation_type == ObservationType.RGBD:
- /imitation/util/util.py
    safe_to_tensor: inconsistent -> if input Tensor, but need to be on another device
    -> won't change tensor
    another workaround would be pushing transitions to gpu, but api doesn't have this function

- pytorch geometric dataloader
    added numpy ndarray case

/home/erik/miniconda3/envs/sofa/lib/python3.9/site-packages/stable_baselines3/common/policies.py:
- line 670+

/home/erik/miniconda3/envs/sofa/lib/python3.9/site-packages/stable_baselines3/common/policies.py
- line 340 and 383


ToDO:
- make own Actor-Critic-Policy class and override extract features
- and override predict function to convert input to pytorch geometric function
- add to pointcloudwrapper to return colors too, maybe change code?
- add more logging info

dataset bigger than memory
hyperparameter bc
other imitation algorithms


partition -> gpu_4
gres
submitit_local
dev_queus
rsync

name: sofa
channels:
  - defaults
dependencies:
  - python=3.9
  - pybind11
  - numpy
  - pytorch-cuda=11.8
  - scipy
  - requests
  - cudatoolkit
  - matplotlib
  - tqdm
  - jinja2
variables:
  SOFA_ROOT: /home/erik/sofa/build/install
  SOFAPYTHON3_ROOT: /home/erik/sofa/build/install/plugins/SofaPython3
prefix: /home/erik/miniconda3/envs/sofa


